#SpringBoot全局配置文件
server.port=9527


#Thymeleaf配置
# 模板文件的位置前缀
spring.thymeleaf.prefix=classpath:/templates/
# 模板文件的后缀
spring.thymeleaf.suffix=.html
# 模板的模式
spring.thymeleaf.mode=HTML
# 模板文件的编码
spring.thymeleaf.encoding=UTF-8
# 生成的响应内容的MIME类型
spring.thymeleaf.servlet.content-type=text/html
# 是否启用 Thymeleaf 的模板缓存
spring.thymeleaf.cache=false
# 是否启用资源链策略的内容解析
spring.resources.chain.strategy.content.enabled=true
# 要进行内容解析的路径模式
spring.resources.chain.strategy.content.paths=/**




# 开发环境下热部署配置
# 开发工具配置
spring.devtools.restart.enabled=true


#jdbc配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/myshop?serverTimezone=Asia/Shanghai&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=msl6159@
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#MyBatis配置
#配置 Mapper 对应 XML 文件的位置
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#关闭 MyBatis 二级缓存
mybatis.configuration.cache-enabled=false
#设置结果集中原属性为 null 时是否映射实体对象
mybatis.configuration.call-setters-on-nulls=true
#设置 null 类型解析：
mybatis.configuration.jdbc-type-for-null=null
#关闭驼峰命名规则映射
mybatis.configuration.map-underscore-to-camel-case=false





## 连接池配置
#spring.datasource.druid.initial-size=20     # 初始连接数
#spring.datasource.druid.min-idle=1          # 最小空闲连接数
#spring.datasource.druid.max-active=50       # 最大活跃连接数
#spring.datasource.druid.max-wait=60000      # 获取连接的最大等待时间
#spring.datasource.druid.time-between-eviction-runs-millis=60000   # 检测空闲连接的间隔时间
#spring.datasource.druid.min-evictable-idle-time-millis=300000      # 连接在池中最小生存时间
#spring.datasource.druid.validation-query=SELECT 'x'                # 测试连接的查询语句
#spring.datasource.druid.test-while-idle=true                       # 获取连接时是否执行检测
#spring.datasource.druid.test-on-borrow=false                       # 归还连接时是否执行检测
#spring.datasource.druid.test-on-return=false                       # 归还连接时是否执行检测
#spring.datasource.druid.pool-prepared-statements=false             # 是否开启PSCache
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20   # 每个连接上缓存的PreparedStatement数量
#spring.datasource.druid.filters=stat,wall,log4j2                   # 扩展插件配置
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000   # 连接属性配置
#
## Druid WebStatFilter配置
#spring.datasource.druid.web-stat-filter.enabled=true               # 是否启用WebStatFilter
#spring.datasource.druid.web-stat-filter.url-pattern=/*             # URL匹配规则
#spring.datasource.druid.web-stat-filter.exclusions=*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*   # 排除的URL
#
## Druid StatViewServlet配置
#spring.datasource.druid.stat-view-servlet.enabled=true             # 是否启用StatViewServlet
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*     # URL匹配规则
#spring.datasource.druid.stat-view-servlet.reset-enable=true        # 是否允许重置统计信息
#spring.datasource.druid.stat-view-servlet.login-username=admin     # 登录用户名
#spring.datasource.druid.stat-view-servlet.login-password=admin     # 登录密码
#
## 连接池日志输出配置
#spring.datasource.druid.filter.slf4j.enabled=true                   # 是否启用Slf4j日志输出
#spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false   # 执行SQL语句后是否输出日志
#spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false    # 关闭SQL语句后是否输出日志
#spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false    # 打开结果集后是否输出日志
#spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false   # 关闭结果集后是否输出日志
#
## 日志配置
#logging.config=classpath:log4j2.xml
