<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.myshop.repository.AdminMapper">

    <resultMap id="admin" type="com.study.myshop.po.AdminPO">
        <id property="adminId" column="admin_id"/>
        <result property="adminName" column="admin_name"/>
        <result property="adminPass" column="admin_pass"/>
        <result property="adminNickname" column="admin_nickname"/>
        <result property="adminStatus" column="admin_status"/>
        <!--
                身份对象的集合,传入当前对象的id
                调用身份mapper中的方法,
                同时定义为 懒加载 -(默认只获取当前admin,什么时候用到集合,再去查询)
         -->
        <collection  property="roleList" ofType="com.study.myshop.po.RolePO"
                column="admin_id"
                select="com.study.myshop.repository.RoleMapper.selectRolePoListByAdminId"
                fetchType="lazy">
        </collection>
    </resultMap>

    <select id="getAdminByAdminName" resultMap="admin">
        select *
        from admin
        where admin_name = #{adminName} and admin_status=1;
    </select>

    <select id="selectAllAdmin" resultMap="admin">
        SELECT * FROM admin
        <where>
            admin_status=1
            <if test="keyWords!=null and keyWords!=''">
                and (admin_name like "%"#{keyWords}"%" or admin_nickname like "%"#{keyWords}"%")
            </if>
        </where>
    </select>

    <update id="deleteByAdminId">
        UPDATE admin SET admin_status =0 WHERE admin_id=#{id}
    </update>



    <insert id="insertAdminByAddAdminVo"
            parameterType="com.study.myshop.vo.AddAdminVo"
            useGeneratedKeys="true"
            keyProperty="addAdminVo.adminId">
        insert into admin
        values (null, #{addAdminVo.adminName}, #{addAdminVo.adminPass}, #{addAdminVo.adminNickname}, 1);
    </insert>

    <insert id="insertAdminRoleAddByAddAdmin">
        insert into admin_role values
            <foreach collection="addAdminVo.roles" item="role_id" separator=",">
                (#{addAdminVo.adminId},#{role_id})
            </foreach>
    </insert>

    <resultMap id="AdminVo" type="com.study.myshop.vo.AdminVo">
        <id property="adminId" column="admin_id"/>
        <result property="adminName" column="admin_name"/>
        <result property="adminNickname" column="admin_nickname"/>
    </resultMap>

    <select id="selectAdminVo" resultMap="AdminVo">
        select * from admin where admin_id=#{adminId}
    </select>

    <update id="updateAdminByAddAdminVo" parameterType="com.study.myshop.vo.AddAdminVo">
        UPDATE admin
        <set>
            <if test=" addAdminVo.adminPass!= null  and addAdminVo.adminPass != ''">admin_pass = #{addAdminVo.adminPass},</if>
            <if test="addAdminVo.adminNickname != null and addAdminVo.adminNickname != '' ">admin_nickname = #{addAdminVo.adminNickname},</if>
        </set>
      WHERE admin_id = #{addAdminVo.adminId}
    </update>

    <delete id="deleteAdminRoleByAdminId">
        delete from admin_role where admin_id = #{adminId}
    </delete>
</mapper>